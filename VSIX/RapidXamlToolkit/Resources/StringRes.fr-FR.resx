<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Info_IntializingCommands" xml:space="preserve">
    <value>Initialisation des commandes (v{0})</value>
    <comment>Info mesage when package initialized</comment>
  </data>
  <data name="Options_AllInOneProject" xml:space="preserve">
    <value>Views &amp; ViewModels sont dans le même projet</value>
  </data>
  <data name="Options_AllInOneProjectDescription" xml:space="preserve">
    <value>Indique que Views et ViewModels (fichiers XAML) sont dans le même projet.</value>
  </data>
  <data name="Options_ButtonAdd" xml:space="preserve">
    <value>_Ajouter</value>
  </data>
  <data name="Options_ButtonCopy" xml:space="preserve">
    <value>_Copier</value>
  </data>
  <data name="Options_ButtonDelete" xml:space="preserve">
    <value>_Supprimer</value>
  </data>
  <data name="Options_ButtonEdit" xml:space="preserve">
    <value>_Modifier</value>
  </data>
  <data name="Options_ButtonImport" xml:space="preserve">
    <value>_Importer</value>
  </data>
  <data name="Options_ButtonNew" xml:space="preserve">
    <value>_Nouveau</value>
  </data>
  <data name="Options_ButtonOk" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="Options_ButtonReset" xml:space="preserve">
    <value>_Réinitialiser</value>
  </data>
  <data name="Options_ButtonSetAsActive" xml:space="preserve">
    <value>_Définir sur Actif</value>
  </data>
  <data name="Options_ClassGrouping" xml:space="preserve">
    <value>Groupe de catégories</value>
  </data>
  <data name="Options_ClassGroupingDescription" xml:space="preserve">
    <value>L'élément qui encapsule les éléments créés pour chaque propriété au moment de la création du XAML pour une catégorie.</value>
  </data>
  <data name="Options_CodeBehindConstructorContent" xml:space="preserve">
    <value>Contenu de constructeur Code-behind</value>
  </data>
  <data name="Options_CodeBehindConstructorContentDescription" xml:space="preserve">
    <value>Le code qui doit être ajouté au constructeur du fichier code-behind lors de la définition du datacontext.</value>
  </data>
  <data name="Options_CodeBehindPageContent" xml:space="preserve">
    <value>Contenu de page Code-behind</value>
  </data>
  <data name="Options_CodeBehindPageContentDescription" xml:space="preserve">
    <value>Le code qui doit être ajouté au fichier code-behind en dehors du constructeur, lors de la définition du datacontext.</value>
  </data>
  <data name="Options_CodeBehindPlaceholder" xml:space="preserve">
    <value>Contenu par défaut du fichier Code-behind</value>
  </data>
  <data name="Options_CodeBehindPlaceholderDescription" xml:space="preserve">
    <value>Les contenus du fichier par défaut lors de la création d'un fichier code-behind.</value>
  </data>
  <data name="Options_DataContextHeader" xml:space="preserve">
    <value>Datacontext</value>
  </data>
  <data name="Options_DefaultCodeBehindConstructor" xml:space="preserve">
    <value>Constructeur code-behind par défaut</value>
  </data>
  <data name="Options_DefaultCodeBehindConstructorDescription" xml:space="preserve">
    <value>Le constructeur du fichier code-behind qui sera ajouté si nécessaire et si aucun constructeur n'existe déjà.</value>
  </data>
  <data name="Options_EnableExtendedLogging" xml:space="preserve">
    <value>Activer la journalisation étendue</value>
  </data>
  <data name="Options_EnumMappingOutput" xml:space="preserve">
    <value>Sortie énumération</value>
  </data>
  <data name="Options_EnumMappingOutputDescription" xml:space="preserve">
    <value>La sortie utilisée pour chaque élément d'une énumération.</value>
  </data>
  <data name="Options_FallbackOutput" xml:space="preserve">
    <value>Sortie de repli</value>
  </data>
  <data name="Options_FallbackOutputDescription" xml:space="preserve">
    <value>La sortie utilisée pour une propriété lorsqu'aucun mappage spécifique ne peut être appliqué.</value>
  </data>
  <data name="Options_GeneralSettingsHeader" xml:space="preserve">
    <value>Paramètres généraux</value>
  </data>
  <data name="Options_MappingIfReadOnly" xml:space="preserve">
    <value>Uniquement si utilisé de manière aléatoire</value>
  </data>
  <data name="Options_MappingIfReadOnlyDescription" xml:space="preserve">
    <value>Le mappage doit uniquement être appliqué si la propriété dispose d'un accesseur en écriture public.</value>
  </data>
  <data name="Options_MappingNameFilter" xml:space="preserve">
    <value>Filtre du nom</value>
  </data>
  <data name="Options_MappingNameFilterDescription" xml:space="preserve">
    <value>Le nom partiel de la propriété à faire correspondre. Plusieurs valeurs peuvent être spécifiées si elles sont séparées par une barre verticale (|).</value>
  </data>
  <data name="Options_MappingOutput" xml:space="preserve">
    <value>Sortie</value>
  </data>
  <data name="Options_MappingOutputDescription" xml:space="preserve">
    <value>La sortie qui doit être générée si ce mappage est utilisé.</value>
  </data>
  <data name="Options_MappingsHeader" xml:space="preserve">
    <value>Mappages</value>
  </data>
  <data name="Options_MappingType" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="Options_MappingTypeDescription" xml:space="preserve">
    <value>Le type de la propriété à faire correspondre. Plusieurs valeurs peuvent être spécifiées si elles sont séparées par une barre verticale (|).</value>
  </data>
  <data name="Options_NamingHeader" xml:space="preserve">
    <value>Nommage</value>
  </data>
  <data name="Options_NamingVisualizer" xml:space="preserve">
    <value>Visualiser la structure de la solution</value>
  </data>
  <data name="Options_ProfileName" xml:space="preserve">
    <value>Nom</value>
  </data>
  <data name="Options_ProfilePageTitle" xml:space="preserve">
    <value>Kit d'outils de développement rapide XAML - Modifier le profil</value>
  </data>
  <data name="Options_ProfilesSectionHeader" xml:space="preserve">
    <value>Profils :</value>
  </data>
  <data name="Options_StructureAndNamingHeader" xml:space="preserve">
    <value>Structure et nommage</value>
  </data>
  <data name="Options_StrucutreHeader" xml:space="preserve">
    <value>Structure du projet</value>
  </data>
  <data name="Options_SubPropertyOutput" xml:space="preserve">
    <value>Sortie de sous-propriété</value>
  </data>
  <data name="Options_SubPropertyOutputDescription" xml:space="preserve">
    <value>La sortie utilisée pour chaque propriété d'un type générique.</value>
  </data>
  <data name="Options_TemporaryUiNotice" xml:space="preserve">
    <value>Cette IU est temporaire et sera modifiée avant le lancement</value>
  </data>
  <data name="Options_ViewModelDirectoryName" xml:space="preserve">
    <value>Nom du répertoire ViewModel</value>
  </data>
  <data name="Options_ViewModelDirectoryNameDescription" xml:space="preserve">
    <value>Le nom du dossier qui contient les fichiers ViewModels.</value>
  </data>
  <data name="Options_ViewModelFileSuffix" xml:space="preserve">
    <value>Suffixe de fichier ViewModel</value>
  </data>
  <data name="Options_ViewModelFileSuffixDescription" xml:space="preserve">
    <value>Le texte ajouté à la fin du nom de chaque fichier ViewModel.</value>
  </data>
  <data name="Options_ViewModelProjectSuffix" xml:space="preserve">
    <value>Suffixe de projet ViewModel</value>
  </data>
  <data name="Options_ViewModelProjectSuffixDescription" xml:space="preserve">
    <value>Le texte à la fin du nom du projet qui contient les fichiers ViewModels. </value>
  </data>
  <data name="Options_XamlFileDirectoryName" xml:space="preserve">
    <value>Nom du répertoire du fichier XAML</value>
  </data>
  <data name="Options_XamlFileDirectoryNameDescription" xml:space="preserve">
    <value>Le nom du dossier qui contient les fichiers Views (fichiers XAML).</value>
  </data>
  <data name="Options_XamlFileSuffix" xml:space="preserve">
    <value>Suffixe de fichier XAML</value>
  </data>
  <data name="Options_XamlFileSuffixDescription" xml:space="preserve">
    <value>Le texte ajouté à la fin du nom de chaque fichier View (fichier XAML).</value>
  </data>
  <data name="Options_XamlPageAttribute" xml:space="preserve">
    <value>Attribut XAMLPage</value>
  </data>
  <data name="Options_XamlPageAttributeDescription" xml:space="preserve">
    <value>L'attribut qui doit être ajouté au niveau supérieur de l'élément XAML lors de la définition du datacontext.</value>
  </data>
  <data name="Options_XamlPlaceholder" xml:space="preserve">
    <value>Contenu par défaut du fichier XAML</value>
  </data>
  <data name="Options_XamlPlaceholderDescription" xml:space="preserve">
    <value>Les contenus du fichier par défaut lors de la création d'un fichier XAML.</value>
  </data>
  <data name="Options_XamlProjectSuffix" xml:space="preserve">
    <value>Suffixe de projet XAML</value>
  </data>
  <data name="Options_XamlProjectSuffixDescription" xml:space="preserve">
    <value>Le texte à la fin du nom du projet qui contient les fichiers Views (fichiers XAML).</value>
  </data>
  <data name="Options_ButtonExport" xml:space="preserve">
    <value>_Exporter</value>
  </data>
  <data name="Error_UnableToFindProjectInSolution" xml:space="preserve">
    <value>Impossible de trouver le projet « {0} » dans la solution.</value>
  </data>
  <data name="Info_AddedRowDefsCount" xml:space="preserve">
    <value>Ajout des définitions de rangées {0}.</value>
  </data>
  <data name="Info_AddedXamlToToolbox" xml:space="preserve">
    <value>Ajout de XAML à la boîte d'outils pour {0}</value>
  </data>
  <data name="Info_AddingColDefsToGrid" xml:space="preserve">
    <value>Ajout des définitions de colonnes à la grille.</value>
  </data>
  <data name="Info_AddingGridToOutput" xml:space="preserve">
    <value>Ajout de la grille à la sortie.</value>
  </data>
  <data name="Info_AddingPropertyToOutput" xml:space="preserve">
    <value>Ajout de « {0} » à la sortie.</value>
  </data>
  <data name="Info_AnalyzingCSharpCode" xml:space="preserve">
    <value>Analyse du code C#. (v{0})</value>
  </data>
  <data name="Info_AnalyzingVisualBasicCode" xml:space="preserve">
    <value>Analyse du code VB.  (v{0})</value>
  </data>
  <data name="Info_AttemptingoAddToToolbox" xml:space="preserve">
    <value>Tentative d'ajout de XAML à la boîte d'outils.</value>
  </data>
  <data name="Info_AttemptingToCopy" xml:space="preserve">
    <value>Tentative de copier XAML dans le presse-papier.</value>
  </data>
  <data name="Info_AttemptingToCreateView" xml:space="preserve">
    <value>Tentative de création de View.</value>
  </data>
  <data name="Info_CannotGetPropertiesForKnownType" xml:space="preserve">
    <value>Impossible d'obtenir les sous-propriétés pour le type connu « {0} ».</value>
  </data>
  <data name="Info_ClassNoPublicProperties" xml:space="preserve">
    <value>La catégorie ne contient aucune propriété publique.</value>
  </data>
  <data name="Info_ClassPropertyCount" xml:space="preserve">
    <value>La catégorie contient {0} propriétés.</value>
  </data>
  <data name="Info_CopiedXaml" xml:space="preserve">
    <value>Copie de XAML pour {0} : {1}</value>
  </data>
  <data name="Info_CreatedView" xml:space="preserve">
    <value>Création du fichier {0}</value>
  </data>
  <data name="Info_DocumentPropertyCount" xml:space="preserve">
    <value>Le document contient {0} propriétés.</value>
  </data>
  <data name="Info_EnumElementCount" xml:space="preserve">
    <value>{0} éléments d'énumération trouvés.</value>
  </data>
  <data name="Info_FailedToGetNullableType" xml:space="preserve">
    <value>Impossible d'obtenir typeSymbol de la propriété « {0} » supposé nul.</value>
  </data>
  <data name="Info_FileExists" xml:space="preserve">
    <value>Le fichier « {0} » existe déjà.</value>
  </data>
  <data name="Info_FormattingOutputForGenericType" xml:space="preserve">
    <value>Mise en forme de la sortie pour le type « {0} » générique.</value>
  </data>
  <data name="Info_FormattingOutputForNonGenericType" xml:space="preserve">
    <value>Mise en forme de la sortie pour le type « {0} » non générique.</value>
  </data>
  <data name="Info_FormattingOutputForProperty" xml:space="preserve">
    <value>Mise en forme de la sortie pour la propriété « {0} ».</value>
  </data>
  <data name="Info_FormattingSubpropertiesInsideGrid" xml:space="preserve">
    <value>Mise en forme des sous-propriétés à l'intérieur de la grille.</value>
  </data>
  <data name="Info_FoundEnumMapping" xml:space="preserve">
    <value>Détection du mappage pour « {0} » en tant qu'énumérateur.</value>
  </data>
  <data name="Info_FoundPropertyCount" xml:space="preserve">
    <value>{0} sous-propriétés trouvées.</value>
  </data>
  <data name="Info_FoundSubProperty" xml:space="preserve">
    <value>{0} sous-propriété trouvée.</value>
  </data>
  <data name="Info_FoundSubPropertyOfUnknownType" xml:space="preserve">
    <value>Sous-propriété de type inconnu trouvée : {0}.</value>
  </data>
  <data name="Info_GetSelectionOutput" xml:space="preserve">
    <value>Récupération de la sortie pour la sélection.</value>
  </data>
  <data name="Info_GetSingleClassOutput" xml:space="preserve">
    <value>Récupération de la sortie pour la catégorie.</value>
  </data>
  <data name="Info_GetSingleItemOutput" xml:space="preserve">
    <value>Récupération de la sortie pour un élément unique.</value>
  </data>
  <data name="Info_GetSinglePropertyOutput" xml:space="preserve">
    <value>Récupération de la sortie pour une propriété unique.</value>
  </data>
  <data name="Info_GettingGenericType" xml:space="preserve">
    <value>Récupération d'un type générique.</value>
  </data>
  <data name="Info_GettingSubPropertyOutput" xml:space="preserve">
    <value>Récupération de la sortie de la sous-propriété de « {0} ».</value>
  </data>
  <data name="Info_IdentifiedPropertySummary" xml:space="preserve">
    <value>Identification de la propriété en tant que Nom = « {0} » Type = « {1} » Lecture uniquement = « {2} ».</value>
  </data>
  <data name="Info_LookingForReadWriteMappings" xml:space="preserve">
    <value>Recherche de mappages qui ne sont pas en lecture seule.</value>
  </data>
  <data name="Info_NoEnumMappingFound" xml:space="preserve">
    <value>Aucun mappage trouvé pour « {0} » en tant qu'énumérateur, vérification par nom de type.</value>
  </data>
  <data name="Info_NoMappingFoundUsingFallback" xml:space="preserve">
    <value>Aucun mappage trouvé donc utilisation de la sortie de repli.</value>
  </data>
  <data name="Info_NoPropertiesToOutput" xml:space="preserve">
    <value>Aucune propriété à laquelle fournir une sortie.</value>
  </data>
  <data name="Info_NothingAddedToToolbox" xml:space="preserve">
    <value>Aucun fichier XAML ajouté à la boîte d'outils.</value>
  </data>
  <data name="Info_NothingToCopy" xml:space="preserve">
    <value>Aucun élément à copier dans le presse-papier.</value>
  </data>
  <data name="Info_NotIncludingExcludedProperty" xml:space="preserve">
    <value>N'inclut pas la propriété « {0} » car celle-ci se trouve dans la liste d'exclusion.</value>
  </data>
  <data name="Info_NotOverwritingFile" xml:space="preserve">
    <value>Le fichier « {0} » n'est pas écrasé.</value>
  </data>
  <data name="Info_NoViewCreated" xml:space="preserve">
    <value>Aucun fichier View créé.</value>
  </data>
  <data name="Info_NoXamlCopied" xml:space="preserve">
    <value>Aucun fichier XAML copié.</value>
  </data>
  <data name="Info_OverwritingFile" xml:space="preserve">
    <value>Le fichier « {0} » est écrasé.</value>
  </data>
  <data name="Info_PropertiesInSelectedAreaCount" xml:space="preserve">
    <value>{0} propriétés dans la zone de sélection.</value>
  </data>
  <data name="Info_PropertyIsReadOnly" xml:space="preserve">
    <value>La propriété est en lecture seule, donc recherche de mappages en lecture seule en priorité.</value>
  </data>
  <data name="Info_PropertyTypeHasNoSubProperties" xml:space="preserve">
    <value>« {0} » est de type « {1} » qui n'a aucune sous-propriétés.</value>
  </data>
  <data name="Info_PropertyTypeNotRecognizedAsGeneric" xml:space="preserve">
    <value>« {0} » n'est pas reconnu comme générique.</value>
  </data>
  <data name="Info_ProperyIsNotReadOnly" xml:space="preserve">
    <value>La propriété n'est pas en lecture seule, donc élimination des mappages en lecture seule.</value>
  </data>
  <data name="Info_ReplacingIncIntPlaceholder" xml:space="preserve">
    <value>Remplacement d'un espace réservé pour l'incrémentation par nombre entier.</value>
  </data>
  <data name="Info_ReplacingRepIntPlaceholder" xml:space="preserve">
    <value>Remplacement d'un espace réservé pour les nombres entiers répétés.</value>
  </data>
  <data name="Info_ReturningOutput" xml:space="preserve">
    <value>Résultat : {0}</value>
  </data>
  <data name="Info_SearchingForMappingWithGenericWildcard" xml:space="preserve">
    <value>Recherche de mappages pour le type générique traité comme « {0} ».</value>
  </data>
  <data name="Info_SubpropertyCount" xml:space="preserve">
    <value>La propriété « {0} » a {1} sous-propriétés.</value>
  </data>
  <data name="Info_UnableToAccessTelemetry" xml:space="preserve">
    <value>Impossible de charger l'assemblée « Microsoft.VisualStudio.Telemetry » donc la télémétrie ne sera pas activée.</value>
  </data>
  <data name="Info_UsingClassGrouping" xml:space="preserve">
    <value>Utilisation du groupe de catégories de « {0} ».</value>
  </data>
  <data name="Prompt_ConfirmDeleteProfileMessage" xml:space="preserve">
    <value>Êtes-vous sûr de vouloir supprimer le profil « {0} » ?</value>
  </data>
  <data name="Prompt_ConfirmDeleteProfileTitle" xml:space="preserve">
    <value>Confirmer la suppression</value>
  </data>
  <data name="Prompt_ConfirmResetProfilesMessage" xml:space="preserve">
    <value>Toutes les modifications seront perdues lors de la réinitialisation des profils. Êtes-vous sûr ?</value>
  </data>
  <data name="Prompt_ConfirmResetProfilesTitle" xml:space="preserve">
    <value>Confirmer la réinitialisation</value>
  </data>
  <data name="Prompt_FileExistsTitle" xml:space="preserve">
    <value>Le fichier existe déjà</value>
  </data>
  <data name="Propt_FileExistsMessage" xml:space="preserve">
    <value>Souhaitez-vous contourner le fichier existant ?</value>
  </data>
  <data name="UI_NoPropertiesXaml" xml:space="preserve">
    <value>&lt;!-- Aucun propriété accessible lors de la copie en tant que fichier XAML --&gt;</value>
  </data>
  <data name="UI_ProfileFilterDescription" xml:space="preserve">
    <value>Profil de développement rapide XAML</value>
  </data>
  <data name="UI_SelectionMoreThanThreeNames" xml:space="preserve">
    <value>{0}, {1} et {2} autres propriétés</value>
  </data>
  <data name="UI_SelectionThreeNames" xml:space="preserve">
    <value>{0}, {1} et 1 autre propriété</value>
  </data>
  <data name="UI_SelectionTwoNames" xml:space="preserve">
    <value>{0} et {1}</value>
  </data>
  <data name="Package__106" xml:space="preserve">
    <value>Kit d'outils de développement XAML rapide</value>
    <comment>Options group header</comment>
  </data>
  <data name="Package__107" xml:space="preserve">
    <value>Profils</value>
    <comment>Options section header</comment>
  </data>
  <data name="Package__110" xml:space="preserve">
    <value>Kit d'outils de développement XAML rapide</value>
    <comment>Title for Help/About</comment>
  </data>
  <data name="Package__112" xml:space="preserve">
    <value>Des outils pour accélérer le développement d'application XAML</value>
    <comment>Detailed description for Help/About</comment>
  </data>
  <data name="Prompt_ImportFailedMessage" xml:space="preserve">
    <value>Le profil n'a pas pu être importé en raison des problèmes suivants :

- {0}</value>
  </data>
  <data name="Prompt_ImportFailedTitle" xml:space="preserve">
    <value>Impossible d'importer le profil</value>
  </data>
  <data name="UI_AccessingOutputPaneFailed" xml:space="preserve">
    <value>Impossible d'obtenir la sous-fenêtre Sortie.</value>
  </data>
  <data name="UI_ActiveProfileName" xml:space="preserve">
    <value>{0}    [*ACTIF*]</value>
  </data>
  <data name="UI_CopiedProfileName" xml:space="preserve">
    <value>{0} (copier)</value>
  </data>
  <data name="UI_CreatingOutputPaneFailed" xml:space="preserve">
    <value>Impossible de créer la sous-fenêtre Sortie.</value>
  </data>
  <data name="UI_NewProfileDefaultName" xml:space="preserve">
    <value>Nouveau</value>
  </data>
  <data name="UI_NoXamlCopiedNoProfilesConfigured" xml:space="preserve">
    <value>Aucun fichier XAML copié. Aucun profil configuré.</value>
  </data>
  <data name="UI_RxtOutputPaneTitle" xml:space="preserve">
    <value>Kit d'outils de développement XAML rapide</value>
  </data>
  <data name="UI_ToolboxGroupHeader" xml:space="preserve">
    <value>Développement XAML rapide</value>
  </data>
  <data name="VSCT__ContextMenu" xml:space="preserve">
    <value>Développement XAML rapide</value>
    <comment>VS Context menu text</comment>
  </data>
  <data name="VSCT__CopyToClipboardCommandId" xml:space="preserve">
    <value>Copier dans le presse-papier.</value>
    <comment>Command button text for when copying to the clipboard as XAML</comment>
  </data>
  <data name="VSCT__CreateViewCommandId" xml:space="preserve">
    <value>Créer un fichier View</value>
    <comment>Command button text for when creating a view from the SolutionExplorer</comment>
  </data>
  <data name="VSCT__OpenOptionsCommandId" xml:space="preserve">
    <value>Tout d'abord, définissez un profil actif</value>
    <comment>Command button text when there is no active profile set</comment>
  </data>
  <data name="VSCT__SendToToolboxCommandId" xml:space="preserve">
    <value>Envoyer à la boîte d'outils</value>
    <comment>Command button text for when sending to the clipboard as XAML</comment>
  </data>
  <data name="VSCT__SetDatacontextCommandId" xml:space="preserve">
    <value>Définir Datacontext</value>
    <comment>Command button text for setting the datacontext of a page</comment>
  </data>
  <data name="VSIX__LocalizedDescription" xml:space="preserve">
    <value>Des outils pour accélérer le développement d'application XAML</value>
    <comment>Description used in vsixlangpack</comment>
  </data>
  <data name="VSIX__LocalizedName" xml:space="preserve">
    <value>Kit d'outils de développement XAML rapide</value>
    <comment>Name used in vsixlangpack</comment>
  </data>
</root>