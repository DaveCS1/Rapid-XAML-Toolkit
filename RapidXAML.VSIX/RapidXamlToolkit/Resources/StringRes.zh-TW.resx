<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Info_IntializingCommands" xml:space="preserve">
    <value>正在初始化命令 (v{0})</value>
    <comment>Info mesage when package initialized</comment>
  </data>
  <data name="Options_AllInOneProject" xml:space="preserve">
    <value>View &amp; ViewModel 位在相同的專案內</value>
  </data>
  <data name="Options_AllInOneProjectDescription" xml:space="preserve">
    <value>指示 ViewModel 和 View (XAML 檔案) 位在相同的專案內。</value>
  </data>
  <data name="Options_ButtonAdd" xml:space="preserve">
    <value>加入</value>
  </data>
  <data name="Options_ButtonCopy" xml:space="preserve">
    <value>複製</value>
  </data>
  <data name="Options_ButtonDelete" xml:space="preserve">
    <value>刪除</value>
  </data>
  <data name="Options_ButtonEdit" xml:space="preserve">
    <value>編輯</value>
  </data>
  <data name="Options_ButtonImport" xml:space="preserve">
    <value>匯入</value>
  </data>
  <data name="Options_ButtonNew" xml:space="preserve">
    <value>新增</value>
  </data>
  <data name="Options_ButtonOk" xml:space="preserve">
    <value>確定</value>
  </data>
  <data name="Options_ButtonReset" xml:space="preserve">
    <value>重設</value>
  </data>
  <data name="Options_ButtonSetAsActive" xml:space="preserve">
    <value>設定為作用中</value>
  </data>
  <data name="Options_ClassGrouping" xml:space="preserve">
    <value>類別分組</value>
  </data>
  <data name="Options_ClassGroupingDescription" xml:space="preserve">
    <value>為類別建立 XAML 時，用來封裝為每個屬性建立之元素的元素。</value>
  </data>
  <data name="Options_CodeBehindConstructorContent" xml:space="preserve">
    <value>Code-behind 建構函式內容</value>
  </data>
  <data name="Options_CodeBehindConstructorContentDescription" xml:space="preserve">
    <value>在設定 datacontext 時，應該加入至程式碼後置檔案之建構函式的程式碼。</value>
  </data>
  <data name="Options_CodeBehindPageContent" xml:space="preserve">
    <value>Code-behind 頁面內容</value>
  </data>
  <data name="Options_CodeBehindPageContentDescription" xml:space="preserve">
    <value>在設定 datacontext 時，應該加入至 code-behind 檔案且在建構函式外面的程式碼。</value>
  </data>
  <data name="Options_CodeBehindPlaceholder" xml:space="preserve">
    <value>Code-behind 檔案預設內容</value>
  </data>
  <data name="Options_CodeBehindPlaceholderDescription" xml:space="preserve">
    <value>在建立 code-behind 檔案時的預設檔案內容。</value>
  </data>
  <data name="Options_DataContextHeader" xml:space="preserve">
    <value>Datacontext</value>
  </data>
  <data name="Options_DefaultCodeBehindConstructor" xml:space="preserve">
    <value>預設 code-behind 建構函式</value>
  </data>
  <data name="Options_DefaultCodeBehindConstructorDescription" xml:space="preserve">
    <value>將加入之 code-behind 檔案的建構函式 (如果需要而且尚未存在)。</value>
  </data>
  <data name="Options_EnableExtendedLogging" xml:space="preserve">
    <value>啟用擴充記錄</value>
  </data>
  <data name="Options_EnumMappingOutput" xml:space="preserve">
    <value>列舉輸出</value>
  </data>
  <data name="Options_EnumMappingOutputDescription" xml:space="preserve">
    <value>用於每個列舉元素的輸出。</value>
  </data>
  <data name="Options_FallbackOutput" xml:space="preserve">
    <value>遞補輸出</value>
  </data>
  <data name="Options_FallbackOutputDescription" xml:space="preserve">
    <value>當無法套用特定的對應時，用於某個屬性的輸出。</value>
  </data>
  <data name="Options_GeneralSettingsHeader" xml:space="preserve">
    <value>一般設定</value>
  </data>
  <data name="Options_MappingIfReadOnly" xml:space="preserve">
    <value>僅限唯讀時</value>
  </data>
  <data name="Options_MappingIfReadOnlyDescription" xml:space="preserve">
    <value>只有當屬性有公用 setter 時，才應該套用此對應。</value>
  </data>
  <data name="Options_MappingNameFilter" xml:space="preserve">
    <value>名稱篩選條件</value>
  </data>
  <data name="Options_MappingNameFilterDescription" xml:space="preserve">
    <value>要比對之屬性的部分名稱。如果以直立線 (|) 字元分隔，可以指定多個值。</value>
  </data>
  <data name="Options_MappingOutput" xml:space="preserve">
    <value>輸出</value>
  </data>
  <data name="Options_MappingOutputDescription" xml:space="preserve">
    <value>使用此對應時，應該產生的輸出。</value>
  </data>
  <data name="Options_MappingsHeader" xml:space="preserve">
    <value>對應</value>
  </data>
  <data name="Options_MappingType" xml:space="preserve">
    <value>型別</value>
  </data>
  <data name="Options_MappingTypeDescription" xml:space="preserve">
    <value>要比對之屬性的型別。如果以直立線 (|) 字元分隔，可以指定多個值。</value>
  </data>
  <data name="Options_NamingHeader" xml:space="preserve">
    <value>命名</value>
  </data>
  <data name="Options_NamingVisualizer" xml:space="preserve">
    <value>將方案結構視覺化</value>
  </data>
  <data name="Options_ProfileName" xml:space="preserve">
    <value>名稱</value>
  </data>
  <data name="Options_ProfilePageTitle" xml:space="preserve">
    <value>Rapid XAML Toolkit - 編輯設定檔</value>
  </data>
  <data name="Options_ProfilesSectionHeader" xml:space="preserve">
    <value>設定檔：</value>
  </data>
  <data name="Options_StructureAndNamingHeader" xml:space="preserve">
    <value>結構與命名</value>
  </data>
  <data name="Options_StrucutreHeader" xml:space="preserve">
    <value>專案結構</value>
  </data>
  <data name="Options_SubPropertyOutput" xml:space="preserve">
    <value>子屬性輸出</value>
  </data>
  <data name="Options_SubPropertyOutputDescription" xml:space="preserve">
    <value>用於泛型型別之每個屬性的輸出。</value>
  </data>
  <data name="Options_TemporaryUiNotice" xml:space="preserve">
    <value>此 UI 為暫時性，將會在發行之前變更</value>
  </data>
  <data name="Options_ViewModelDirectoryName" xml:space="preserve">
    <value>ViewModel 目錄名稱</value>
  </data>
  <data name="Options_ViewModelDirectoryNameDescription" xml:space="preserve">
    <value>包含 ViewModel 的資料夾名稱。</value>
  </data>
  <data name="Options_ViewModelFileSuffix" xml:space="preserve">
    <value>ViewModel 檔案尾碼</value>
  </data>
  <data name="Options_ViewModelFileSuffixDescription" xml:space="preserve">
    <value>附加至每個 ViewModel 名稱結尾的文字。</value>
  </data>
  <data name="Options_ViewModelProjectSuffix" xml:space="preserve">
    <value>ViewModel 專案尾碼</value>
  </data>
  <data name="Options_ViewModelProjectSuffixDescription" xml:space="preserve">
    <value>包含 ViewModel 之專案名稱結尾的文字。</value>
  </data>
  <data name="Options_XamlFileDirectoryName" xml:space="preserve">
    <value>XAML 檔案目錄名稱</value>
  </data>
  <data name="Options_XamlFileDirectoryNameDescription" xml:space="preserve">
    <value>包含 View (XAML 檔案) 的資料夾名稱。</value>
  </data>
  <data name="Options_XamlFileSuffix" xml:space="preserve">
    <value>XAML 檔案尾碼</value>
  </data>
  <data name="Options_XamlFileSuffixDescription" xml:space="preserve">
    <value>附加至每個 View (XAML 檔案) 名稱結尾的文字。</value>
  </data>
  <data name="Options_XamlPageAttribute" xml:space="preserve">
    <value>XAMLPage 屬性</value>
  </data>
  <data name="Options_XamlPageAttributeDescription" xml:space="preserve">
    <value>在設定 datacontext 時，應該加入至最上層 XAMLelement 的屬性。</value>
  </data>
  <data name="Options_XamlPlaceholder" xml:space="preserve">
    <value>XAML 檔案預設內容</value>
  </data>
  <data name="Options_XamlPlaceholderDescription" xml:space="preserve">
    <value>在建立新的 XAML 檔案時的預設檔案內容。</value>
  </data>
  <data name="Options_XamlProjectSuffix" xml:space="preserve">
    <value>XAML 專案尾碼</value>
  </data>
  <data name="Options_XamlProjectSuffixDescription" xml:space="preserve">
    <value>包含 View (XAML 檔案) 之專案名稱結尾的文字。</value>
  </data>
  <data name="Option_ButtonExport" xml:space="preserve">
    <value>匯出</value>
  </data>
  <data name="Error_UnableToFindProjectInSolution" xml:space="preserve">
    <value>在方案中找不到專案 '{0}'。</value>
  </data>
  <data name="Info_AddedRowDefsCount" xml:space="preserve">
    <value>正在加入 {0} 資料列定義。</value>
  </data>
  <data name="Info_AddedXamlToToolbox" xml:space="preserve">
    <value>已為 {0} 將 XAML 加入至工具箱</value>
  </data>
  <data name="Info_AddingColDefsToGrid" xml:space="preserve">
    <value>正在將 ColumnDefinitions 加入至方格。</value>
  </data>
  <data name="Info_AddingGridToOutput" xml:space="preserve">
    <value>正在將方格加入至輸出。</value>
  </data>
  <data name="Info_AddingPropertyToOutput" xml:space="preserve">
    <value>正在將 '{0}' 加入至輸出。</value>
  </data>
  <data name="Info_AnalyzingCSharpCode" xml:space="preserve">
    <value>正在分析 C# 程式碼。(v{0})</value>
  </data>
  <data name="Info_AnalyzingVisualBasicCode" xml:space="preserve">
    <value>正在分析 VB 程式碼。(v{0})</value>
  </data>
  <data name="Info_AttemptingoAddToToolbox" xml:space="preserve">
    <value>正在嘗試將 XAML 加入至工具箱。</value>
  </data>
  <data name="Info_AttemptingToCopy" xml:space="preserve">
    <value>正在嘗試將 XAML 複製到剪貼簿。</value>
  </data>
  <data name="Info_AttemptingToCreateView" xml:space="preserve">
    <value>正在嘗試建立 View。</value>
  </data>
  <data name="Info_CannotGetPropertiesForKnownType" xml:space="preserve">
    <value>無法為已知型別 '{0}' 取得子屬性。</value>
  </data>
  <data name="Info_ClassNoPublicProperties" xml:space="preserve">
    <value>類別未包含任何公用屬性。</value>
  </data>
  <data name="Info_ClassPropertyCount" xml:space="preserve">
    <value>類別包含 {0} 屬性。</value>
  </data>
  <data name="Info_CopiedXaml" xml:space="preserve">
    <value>已為 {0} 複製 XAML：{1}</value>
  </data>
  <data name="Info_CreatedView" xml:space="preserve">
    <value>已建立檔案 {0}</value>
  </data>
  <data name="Info_DocumentPropertyCount" xml:space="preserve">
    <value>文件包含 {0} 屬性。</value>
  </data>
  <data name="Info_EnumElementCount" xml:space="preserve">
    <value>已找到列舉的 {0} 個元素。</value>
  </data>
  <data name="Info_FailedToGetNullableType" xml:space="preserve">
    <value>無法取得假定可為 Null 之屬性 '{0}' 的 typeSymbol。</value>
  </data>
  <data name="Info_FileExists" xml:space="preserve">
    <value>檔案 '{0}' 已經存在。</value>
  </data>
  <data name="Info_FormattingOutputForGenericType" xml:space="preserve">
    <value>正在格式化泛型型別 '{0}' 的輸出。</value>
  </data>
  <data name="Info_FormattingOutputForNonGenericType" xml:space="preserve">
    <value>正在格式化非泛型型別 '{0}' 的輸出。</value>
  </data>
  <data name="Info_FormattingOutputForProperty" xml:space="preserve">
    <value>正在格式化屬性 '{0}' 的輸出。</value>
  </data>
  <data name="Info_FormattingSubpropertiesInsideGrid" xml:space="preserve">
    <value>正在格式化方格內的子屬性。</value>
  </data>
  <data name="Info_FoundEnumMapping" xml:space="preserve">
    <value>已找到 '{0}' 的對應 (列舉的形式)。</value>
  </data>
  <data name="Info_FoundPropertyCount" xml:space="preserve">
    <value>已找到 {0} 個子屬性。</value>
  </data>
  <data name="Info_FoundSubProperty" xml:space="preserve">
    <value>已找到子屬性 '{0}'。</value>
  </data>
  <data name="Info_FoundSubPropertyOfUnknownType" xml:space="preserve">
    <value>已找到未知型別的子屬性：{0}。</value>
  </data>
  <data name="Info_GetSelectionOutput" xml:space="preserve">
    <value>正在取得選擇的輸出。</value>
  </data>
  <data name="Info_GetSingleClassOutput" xml:space="preserve">
    <value>正在取得類別的輸出。</value>
  </data>
  <data name="Info_GetSingleItemOutput" xml:space="preserve">
    <value>正在取得單一項目的輸出。</value>
  </data>
  <data name="Info_GetSinglePropertyOutput" xml:space="preserve">
    <value>正在取得單一屬性的輸出。</value>
  </data>
  <data name="Info_GettingGenericType" xml:space="preserve">
    <value>正在取得泛型型別。</value>
  </data>
  <data name="Info_GettingSubPropertyOutput" xml:space="preserve">
    <value>正在取得 '{0}' 的子屬性輸出。</value>
  </data>
  <data name="Info_IdentifiedPropertySummary" xml:space="preserve">
    <value>已將屬性識別為 Name='{0}' Type='{1}' IsReadOnly='{2}'。</value>
  </data>
  <data name="Info_LookingForReadWriteMappings" xml:space="preserve">
    <value>正在尋找非唯讀的對應。</value>
  </data>
  <data name="Info_NoEnumMappingFound" xml:space="preserve">
    <value>已找到 '{0}' 的對應 (列舉的形式)，所以現在依據型別名稱進行檢查。</value>
  </data>
  <data name="Info_NoMappingFoundUsingFallback" xml:space="preserve">
    <value>未找到任何對應，所以使用遞補輸出。</value>
  </data>
  <data name="Info_NoPropertiesToOutput" xml:space="preserve">
    <value>未提供輸出的任何屬性。</value>
  </data>
  <data name="Info_NothingAddedToToolbox" xml:space="preserve">
    <value>沒有任何 XAML 加入至工具箱。</value>
  </data>
  <data name="Info_NothingToCopy" xml:space="preserve">
    <value>沒有任何內容可複製到剪貼簿。</value>
  </data>
  <data name="Info_NotIncludingExcludedProperty" xml:space="preserve">
    <value>未包含屬性 '{0}' 因為它已經在排除清單上。</value>
  </data>
  <data name="Info_NotOverwritingFile" xml:space="preserve">
    <value>未覆寫 '{0}'。</value>
  </data>
  <data name="Info_NoViewCreated" xml:space="preserve">
    <value>未建立任何 View。</value>
  </data>
  <data name="Info_NoXamlCopied" xml:space="preserve">
    <value>未複製任何 XAML。</value>
  </data>
  <data name="Info_OverwritingFile" xml:space="preserve">
    <value>正在覆寫 '{0}'。</value>
  </data>
  <data name="Info_PropertiesInSelectedAreaCount" xml:space="preserve">
    <value>選取區域內的 {0} 個屬性。</value>
  </data>
  <data name="Info_PropertyIsReadOnly" xml:space="preserve">
    <value>屬性是唯讀的，所以先尋找唯讀的對應。</value>
  </data>
  <data name="Info_PropertyTypeHasNoSubProperties" xml:space="preserve">
    <value>'{0}' 的型別為沒有子屬性的 '{1}'。</value>
  </data>
  <data name="Info_PropertyTypeNotRecognizedAsGeneric" xml:space="preserve">
    <value>'{0}' 未識別為泛型。</value>
  </data>
  <data name="Info_ProperyIsNotReadOnly" xml:space="preserve">
    <value>屬性不是唯讀的，所以篩選掉唯讀的對應。</value>
  </data>
  <data name="Info_ReplacingIncIntPlaceholder" xml:space="preserve">
    <value>取代遞增整數預留位置。</value>
  </data>
  <data name="Info_ReplacingRepIntPlaceholder" xml:space="preserve">
    <value>取代重複整數預留位置。</value>
  </data>
  <data name="Info_ReturningOutput" xml:space="preserve">
    <value>正在傳回：{0}</value>
  </data>
  <data name="Info_SearchingForMappingWithGenericWildcard" xml:space="preserve">
    <value>正在搜尋視為 '{0}' 之泛型型別的對應。</value>
  </data>
  <data name="Info_SubpropertyCount" xml:space="preserve">
    <value>屬性 '{0}' 有 {1} 個子屬性。</value>
  </data>
  <data name="Info_UnableToAccessTelemetry" xml:space="preserve">
    <value>無法載入組件 'Microsoft.VisualStudio.Telemetry' 所以將無法啟用遙測。</value>
  </data>
  <data name="Info_UsingClassGrouping" xml:space="preserve">
    <value>正在使用 '{0}' 的類別分組。</value>
  </data>
  <data name="Prompt_ConfirmDeleteProfileMessage" xml:space="preserve">
    <value>您確定要刪除設定檔 '{0}' 嗎？</value>
  </data>
  <data name="Prompt_ConfirmDeleteProfileTitle" xml:space="preserve">
    <value>確認刪除</value>
  </data>
  <data name="Prompt_ConfirmResetProfilesMessage" xml:space="preserve">
    <value>重設設定檔將會使您失去任何變更。您確定嗎？</value>
  </data>
  <data name="Prompt_ConfirmResetProfilesTitle" xml:space="preserve">
    <value>確認重設</value>
  </data>
  <data name="Prompt_FileExistsTitle" xml:space="preserve">
    <value>檔案已經存在</value>
  </data>
  <data name="Propt_FileExistsMessage" xml:space="preserve">
    <value>您想要覆寫現有的檔案嗎？</value>
  </data>
  <data name="UI_NoPropertiesXaml" xml:space="preserve">
    <value>&lt;!-- 在複製為 XAML 時沒有可存取的屬性--&gt;</value>
  </data>
  <data name="UI_ProfileFilterDescription" xml:space="preserve">
    <value>Rapid XAML 設定檔</value>
  </data>
  <data name="UI_SelectionMoreThanThreeNames" xml:space="preserve">
    <value>{0}、{1} 和其他 {2} 個屬性</value>
  </data>
  <data name="UI_SelectionThreeNames" xml:space="preserve">
    <value>{0}、{1} 和其他 1 個屬性</value>
  </data>
  <data name="UI_SelectionTwoNames" xml:space="preserve">
    <value>{0} 和 {1}</value>
  </data>
  <data name="Package__106" xml:space="preserve">
    <value>Rapid XAML Toolkit</value>
    <comment>Options group header</comment>
  </data>
  <data name="Package__107" xml:space="preserve">
    <value>設定檔</value>
    <comment>Options section header</comment>
  </data>
  <data name="Package__110" xml:space="preserve">
    <value>Rapid XAML Toolkit</value>
    <comment>Title for Help/About</comment>
  </data>
  <data name="Package__112" xml:space="preserve">
    <value>加速 XAML 應用程式開發的工具</value>
    <comment>Detailed description for Help/About</comment>
  </data>
  <data name="Prompt_ImportFailedMessage" xml:space="preserve">
    <value>以下問題導致設定檔無法匯入：\r\n\r\n- {0}</value>
  </data>
  <data name="Prompt_ImportFailedTitle" xml:space="preserve">
    <value>無法匯入設定檔</value>
  </data>
  <data name="UI_AccessingOutputPaneFailed" xml:space="preserve">
    <value>無法取得輸出視窗窗格。</value>
  </data>
  <data name="UI_ActiveProfileName" xml:space="preserve">
    <value>{0}    [*作用中*]</value>
  </data>
  <data name="UI_CopiedProfileName" xml:space="preserve">
    <value>{0} (複製)</value>
  </data>
  <data name="UI_CreatingOutputPaneFailed" xml:space="preserve">
    <value>無法建立輸出視窗窗格。</value>
  </data>
  <data name="UI_NewProfileDefaultName" xml:space="preserve">
    <value>新增</value>
  </data>
  <data name="UI_NoXamlCopiedNoProfilesConfigured" xml:space="preserve">
    <value>未複製任何 XAML。未設定任何設定檔。</value>
  </data>
  <data name="UI_RxtOutputPaneTitle" xml:space="preserve">
    <value>Rapid XAML Toolkit</value>
  </data>
  <data name="UI_ToolboxGroupHeader" xml:space="preserve">
    <value>Rapid XAML</value>
  </data>
  <data name="VSCT__ContextMenu" xml:space="preserve">
    <value>Rapid XAML</value>
    <comment>VS Context menu text</comment>
  </data>
  <data name="VSCT__CopyToClipboardCommandId" xml:space="preserve">
    <value>複製到剪貼簿</value>
    <comment>Command button text for when copying to the clipboard as XAML</comment>
  </data>
  <data name="VSCT__CreateViewCommandId" xml:space="preserve">
    <value>建立 View</value>
    <comment>Command button text for when creating a view from the SolutionExplorer</comment>
  </data>
  <data name="VSCT__OpenOptionsCommandId" xml:space="preserve">
    <value>先設定作用中設定檔</value>
    <comment>Command button text when there is no active profile set</comment>
  </data>
  <data name="VSCT__SendToToolboxCommandId" xml:space="preserve">
    <value>傳送到工具箱</value>
    <comment>Command button text for when sending to the clipboard as XAML</comment>
  </data>
  <data name="VSCT__SetDatacontextCommandId" xml:space="preserve">
    <value>設定 Datacontext</value>
    <comment>Command button text for setting the datacontext of a page</comment>
  </data>
  <data name="VSIX__LocalizedDescription" xml:space="preserve">
    <value>加速 XAML 應用程式開發的工具</value>
    <comment>Description used in vsixlangpack</comment>
  </data>
  <data name="VSIX__LocalizedName" xml:space="preserve">
    <value>Rapid XAML Toolkit</value>
    <comment>Name used in vsixlangpack</comment>
  </data>
</root>