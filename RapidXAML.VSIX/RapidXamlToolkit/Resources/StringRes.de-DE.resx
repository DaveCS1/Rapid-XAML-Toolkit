<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Info_IntializingCommands" xml:space="preserve">
    <value>Befehle werden initialisiert... (v{0})</value>
    <comment>Info mesage when package initialized</comment>
  </data>
  <data name="Options_AllInOneProject" xml:space="preserve">
    <value>Ansichten &amp; ViewModels befinden sich im gleichen Projekt.</value>
  </data>
  <data name="Options_AllInOneProjectDescription" xml:space="preserve">
    <value>Geben Sie an, dass sich ViewModels und Ansichten (XAML-Dateien) im gleichen Projekt befinden.</value>
  </data>
  <data name="Options_ButtonAdd" xml:space="preserve">
    <value>Hinzufügen</value>
  </data>
  <data name="Options_ButtonCopy" xml:space="preserve">
    <value>Kopieren</value>
  </data>
  <data name="Options_ButtonDelete" xml:space="preserve">
    <value>Löschen</value>
  </data>
  <data name="Options_ButtonEdit" xml:space="preserve">
    <value>Bearbeiten</value>
  </data>
  <data name="Options_ButtonImport" xml:space="preserve">
    <value>Importieren</value>
  </data>
  <data name="Options_ButtonNew" xml:space="preserve">
    <value>Neu</value>
  </data>
  <data name="Options_ButtonOk" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="Options_ButtonReset" xml:space="preserve">
    <value>Zurücksetzen</value>
  </data>
  <data name="Options_ButtonSetAsActive" xml:space="preserve">
    <value>Als aktiv festlegen</value>
  </data>
  <data name="Options_ClassGrouping" xml:space="preserve">
    <value>Klassengruppierung</value>
  </data>
  <data name="Options_ClassGroupingDescription" xml:space="preserve">
    <value>Das Element, das die Elemente einschließt, die beim Erstellen einer XAML-Datei für eine Klasse für jede Eigenschaft erstellt wurden.</value>
  </data>
  <data name="Options_CodeBehindConstructorContent" xml:space="preserve">
    <value>Code-behind-Konstruktorinhalt</value>
  </data>
  <data name="Options_CodeBehindConstructorContentDescription" xml:space="preserve">
    <value>Code, der beim Festlegen des Datenkontexts dem Konstruktor der CodeBehind-Datei hinzugefügt werden sollte.</value>
  </data>
  <data name="Options_CodeBehindPageContent" xml:space="preserve">
    <value>Code-behind-Seiteninhalt</value>
  </data>
  <data name="Options_CodeBehindPageContentDescription" xml:space="preserve">
    <value>Code, der beim Festlegen des Datenkontexts der code-behind-Datei außerhalb des Konstruktors hinzugefügt werden sollte.</value>
  </data>
  <data name="Options_CodeBehindPlaceholder" xml:space="preserve">
    <value>Standardinhalt der Code-behind-Datei</value>
  </data>
  <data name="Options_CodeBehindPlaceholderDescription" xml:space="preserve">
    <value>Die Standarddateiinhalte beim Erstellen einer code-behind-Datei.</value>
  </data>
  <data name="Options_DataContextHeader" xml:space="preserve">
    <value>Datenkontext</value>
  </data>
  <data name="Options_DefaultCodeBehindConstructor" xml:space="preserve">
    <value>code-behind-Standardkonstruktor</value>
  </data>
  <data name="Options_DefaultCodeBehindConstructorDescription" xml:space="preserve">
    <value>Der Konstruktor der code-behind-Datei, die hinzugefügt wird, sofern erforderlich und noch nicht vorhanden.</value>
  </data>
  <data name="Options_EnableExtendedLogging" xml:space="preserve">
    <value>Erweiterte Protokollierung aktivieren</value>
  </data>
  <data name="Options_EnumMappingOutput" xml:space="preserve">
    <value>Enumerationsausgabe</value>
  </data>
  <data name="Options_EnumMappingOutputDescription" xml:space="preserve">
    <value>Die für die einzelnen Elemente einer Enumeration verwendete Ausgabe.</value>
  </data>
  <data name="Options_FallbackOutput" xml:space="preserve">
    <value>Fallbackausgabe</value>
  </data>
  <data name="Options_FallbackOutputDescription" xml:space="preserve">
    <value>Die für eine Eigenschaft verwendete Ausgabe, wenn keine bestimmte Zuordnung angewendet werden kann.</value>
  </data>
  <data name="Options_GeneralSettingsHeader" xml:space="preserve">
    <value>Allgemeine Einstellungen</value>
  </data>
  <data name="Options_MappingIfReadOnly" xml:space="preserve">
    <value>Nur bei Schreibschutz</value>
  </data>
  <data name="Options_MappingIfReadOnlyDescription" xml:space="preserve">
    <value>Die Zuordnung sollte nur angewendet werden, wenn für die Eigenschaft ein öffentlicher Setter angegeben ist.</value>
  </data>
  <data name="Options_MappingNameFilter" xml:space="preserve">
    <value>Namensfilter</value>
  </data>
  <data name="Options_MappingNameFilterDescription" xml:space="preserve">
    <value>Der unvollständige Name der Eigenschaft für den Abgleich. Mehrere Werte können durch einen senkrechten Strich (|) getrennt eingegeben werden.</value>
  </data>
  <data name="Options_MappingOutput" xml:space="preserve">
    <value>Ausgabe</value>
  </data>
  <data name="Options_MappingOutputDescription" xml:space="preserve">
    <value>Die Ausgabe, die generiert werden sollte, wenn diese Zuordnung verwendet wird.</value>
  </data>
  <data name="Options_MappingsHeader" xml:space="preserve">
    <value>Zuordnungen</value>
  </data>
  <data name="Options_MappingType" xml:space="preserve">
    <value>Typ</value>
  </data>
  <data name="Options_MappingTypeDescription" xml:space="preserve">
    <value>Der Typ der Eigenschaft für den Abgleich. Mehrere Werte können durch einen senkrechten Strich (|) getrennt eingegeben werden.</value>
  </data>
  <data name="Options_NamingHeader" xml:space="preserve">
    <value>Benennung</value>
  </data>
  <data name="Options_NamingVisualizer" xml:space="preserve">
    <value>Lösungsstruktur visualisieren</value>
  </data>
  <data name="Options_ProfileName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Options_ProfilePageTitle" xml:space="preserve">
    <value>Toolkit für schnelle XAML-Entwicklung – Profil bearbeiten</value>
  </data>
  <data name="Options_ProfilesSectionHeader" xml:space="preserve">
    <value>Profile:</value>
  </data>
  <data name="Options_StructureAndNamingHeader" xml:space="preserve">
    <value>Struktur und Benennung</value>
  </data>
  <data name="Options_StrucutreHeader" xml:space="preserve">
    <value>Projektstruktur</value>
  </data>
  <data name="Options_SubPropertyOutput" xml:space="preserve">
    <value>Ausgabe der Untereigenschaft</value>
  </data>
  <data name="Options_SubPropertyOutputDescription" xml:space="preserve">
    <value>Die für die einzelnen Eigenschaften mit generischem Typ verwendete Ausgabe.</value>
  </data>
  <data name="Options_TemporaryUiNotice" xml:space="preserve">
    <value>Die Benutzeroberfläche ist vorläufig und wird vor der Veröffentlichung geändert.</value>
  </data>
  <data name="Options_ViewModelDirectoryName" xml:space="preserve">
    <value>ViewModel-Verzeichnisname</value>
  </data>
  <data name="Options_ViewModelDirectoryNameDescription" xml:space="preserve">
    <value>Der Name des Ordners mit den ViewModels.</value>
  </data>
  <data name="Options_ViewModelFileSuffix" xml:space="preserve">
    <value>ViewModel-Dateisuffix</value>
  </data>
  <data name="Options_ViewModelFileSuffixDescription" xml:space="preserve">
    <value>Der Text, der ans Ende der einzelnen ViewModel-Namen angehängt wird.</value>
  </data>
  <data name="Options_ViewModelProjectSuffix" xml:space="preserve">
    <value>ViewModel-Projektsuffix</value>
  </data>
  <data name="Options_ViewModelProjectSuffixDescription" xml:space="preserve">
    <value>Der Text am Ende des Namens des Projekts, das die ViewModels enthält. </value>
  </data>
  <data name="Options_XamlFileDirectoryName" xml:space="preserve">
    <value>Verzeichnisname der XAML-Datei</value>
  </data>
  <data name="Options_XamlFileDirectoryNameDescription" xml:space="preserve">
    <value>Der Name des Ordners mit den Ansichten (XAML-Dateien).</value>
  </data>
  <data name="Options_XamlFileSuffix" xml:space="preserve">
    <value>XAML-Dateisuffix</value>
  </data>
  <data name="Options_XamlFileSuffixDescription" xml:space="preserve">
    <value>Der Text, der ans Ende der einzelnen Ansichtsnamen (XAML-Datei) angehängt wird.</value>
  </data>
  <data name="Options_XamlPageAttribute" xml:space="preserve">
    <value>XAMLPage-Attribut</value>
  </data>
  <data name="Options_XamlPageAttributeDescription" xml:space="preserve">
    <value>Das Attribut, das beim Festlegen des Datenkontexts dem XAML-Element auf oberster Ebene hinzugefügt werden sollte.</value>
  </data>
  <data name="Options_XamlPlaceholder" xml:space="preserve">
    <value>Standardinhalt der XAML-Datei</value>
  </data>
  <data name="Options_XamlPlaceholderDescription" xml:space="preserve">
    <value>Die Standarddateiinhalte beim Erstellen einer neuen XAML-Datei.</value>
  </data>
  <data name="Options_XamlProjectSuffix" xml:space="preserve">
    <value>XAML-Projektsuffix</value>
  </data>
  <data name="Options_XamlProjectSuffixDescription" xml:space="preserve">
    <value>Der Text am Ende des Namens des Projekts, das die Ansichten (XAML-Dateien) enthält.</value>
  </data>
  <data name="Option_ButtonExport" xml:space="preserve">
    <value>Exportieren</value>
  </data>
  <data name="Error_UnableToFindProjectInSolution" xml:space="preserve">
    <value>Das Projekt „{0}“ wurde in der Lösung nicht gefunden.</value>
  </data>
  <data name="Info_AddedRowDefsCount" xml:space="preserve">
    <value>{0} Zeilendefinitionen werden hinzugefügt...</value>
  </data>
  <data name="Info_AddedXamlToToolbox" xml:space="preserve">
    <value>XAML zur Toolbox für {0} hinzugefügt</value>
  </data>
  <data name="Info_AddingColDefsToGrid" xml:space="preserve">
    <value>ColumnDefinitions werden zum Raster hinzugefügt...</value>
  </data>
  <data name="Info_AddingGridToOutput" xml:space="preserve">
    <value>Das Raster wird zur Ausgabe hinzugefügt...</value>
  </data>
  <data name="Info_AddingPropertyToOutput" xml:space="preserve">
    <value>„{0}“ wird zur Ausgabe hinzugefügt...</value>
  </data>
  <data name="Info_AnalyzingCSharpCode" xml:space="preserve">
    <value>C#-Code wird analysiert... (v{0})</value>
  </data>
  <data name="Info_AnalyzingVisualBasicCode" xml:space="preserve">
    <value>VB-Code wird analysiert...  (v{0})</value>
  </data>
  <data name="Info_AttemptingoAddToToolbox" xml:space="preserve">
    <value>Es wird versucht, XAML zur Toolbox hinzuzufügen.</value>
  </data>
  <data name="Info_AttemptingToCopy" xml:space="preserve">
    <value>Es wird versucht, XAML in die Zwischenablage zu kopieren.</value>
  </data>
  <data name="Info_AttemptingToCreateView" xml:space="preserve">
    <value>Es wird versucht, eine Ansicht zu erstellen.</value>
  </data>
  <data name="Info_CannotGetPropertiesForKnownType" xml:space="preserve">
    <value>Die Untereigenschaften für den bekannten Typ „{0}“ können nicht abgerufen werden.</value>
  </data>
  <data name="Info_ClassNoPublicProperties" xml:space="preserve">
    <value>Die Klasse enthält keine öffentlichen Eigenschaften.</value>
  </data>
  <data name="Info_ClassPropertyCount" xml:space="preserve">
    <value>Die Klasse enthält {0} Eigenschaften.</value>
  </data>
  <data name="Info_CopiedXaml" xml:space="preserve">
    <value>XAML wurde für {0} kopiert: {1}</value>
  </data>
  <data name="Info_CreatedView" xml:space="preserve">
    <value>Die Datei „{0}“ wurde erstellt.</value>
  </data>
  <data name="Info_DocumentPropertyCount" xml:space="preserve">
    <value>Das Dokument enthält {0} Eigenschaften.</value>
  </data>
  <data name="Info_EnumElementCount" xml:space="preserve">
    <value>{0} Elemente der Enumeration wurden gefunden.</value>
  </data>
  <data name="Info_FailedToGetNullableType" xml:space="preserve">
    <value>Fehler beim Abrufen von „typeSymbol“ der Eigenschaft „{0}“, von der angenommen wurde dass Nullwerte zulässig sind.</value>
  </data>
  <data name="Info_FileExists" xml:space="preserve">
    <value>Die Datei „{0}“ ist bereits vorhanden.</value>
  </data>
  <data name="Info_FormattingOutputForGenericType" xml:space="preserve">
    <value>Die Ausgabe für den generischen Typ „{0}“ wird formatiert...</value>
  </data>
  <data name="Info_FormattingOutputForNonGenericType" xml:space="preserve">
    <value>Die Ausgabe für den nicht generischen Typ „{0}“ wird formatiert...</value>
  </data>
  <data name="Info_FormattingOutputForProperty" xml:space="preserve">
    <value>Die Ausgabe für die Eigenschaft „{0}“ wird formatiert...</value>
  </data>
  <data name="Info_FormattingSubpropertiesInsideGrid" xml:space="preserve">
    <value>Die Untereigenschaften in einem Raster werden formatiert...</value>
  </data>
  <data name="Info_FoundEnumMapping" xml:space="preserve">
    <value>Die Zuordnung für „{0}“ wurde als Enumeration ermittelt.</value>
  </data>
  <data name="Info_FoundPropertyCount" xml:space="preserve">
    <value>{0} Untereigenschaften wurden gefunden.</value>
  </data>
  <data name="Info_FoundSubProperty" xml:space="preserve">
    <value>Die Untereigenschaft „{0}“ wurde gefunden.</value>
  </data>
  <data name="Info_FoundSubPropertyOfUnknownType" xml:space="preserve">
    <value>Eine Untereigenschaft mit unbekanntem Typ wurde gefunden. {0}.</value>
  </data>
  <data name="Info_GetSelectionOutput" xml:space="preserve">
    <value>Die Ausgabe für die Auswahl wird abgerufen...</value>
  </data>
  <data name="Info_GetSingleClassOutput" xml:space="preserve">
    <value>Die Ausgabe für die Klasse wird abgerufen...</value>
  </data>
  <data name="Info_GetSingleItemOutput" xml:space="preserve">
    <value>Die Ausgabe für ein einzelnes Element wird abgerufen...</value>
  </data>
  <data name="Info_GetSinglePropertyOutput" xml:space="preserve">
    <value>Die Ausgabe für eine einzelne Eigenschaft wird abgerufen...</value>
  </data>
  <data name="Info_GettingGenericType" xml:space="preserve">
    <value>Ein generischer Typ wird abgerufen...</value>
  </data>
  <data name="Info_GettingSubPropertyOutput" xml:space="preserve">
    <value>Die Ausgabe der Untereigenschaft für „{0}“ wird abgerufen...</value>
  </data>
  <data name="Info_IdentifiedPropertySummary" xml:space="preserve">
    <value>Für die Eigenschaft wurde Folgendes ermittelt: Name='{0}' Type='{1}' IsReadOnly='{2}'.</value>
  </data>
  <data name="Info_LookingForReadWriteMappings" xml:space="preserve">
    <value>Es wird nach nicht schreibgeschützten Zuordnungen gesucht...</value>
  </data>
  <data name="Info_NoEnumMappingFound" xml:space="preserve">
    <value>Für „{0}“ wurde keine Zuordnung als Enumeration gefunden, daher wird nun anhand des Typnamens gesucht.</value>
  </data>
  <data name="Info_NoMappingFoundUsingFallback" xml:space="preserve">
    <value>Es wurde keine Zuordnung gefunden, daher wird die Fallbackausgabe verwendet.</value>
  </data>
  <data name="Info_NoPropertiesToOutput" xml:space="preserve">
    <value>Keine Eigenschaft, für die eine Ausgabe bereitgestellt wird.</value>
  </data>
  <data name="Info_NothingAddedToToolbox" xml:space="preserve">
    <value>Keine XAML zur Toolbox hinzugefügt.</value>
  </data>
  <data name="Info_NothingToCopy" xml:space="preserve">
    <value>Kein in die Zwischenablage zu kopierendes Element vorhanden.</value>
  </data>
  <data name="Info_NotIncludingExcludedProperty" xml:space="preserve">
    <value>Die Eigenschaft „{0}“ wird nicht aufgenommen, da sie in der Ausschlussliste enthalten ist.</value>
  </data>
  <data name="Info_NotOverwritingFile" xml:space="preserve">
    <value>„{0}“ wird nicht überschrieben.</value>
  </data>
  <data name="Info_NoViewCreated" xml:space="preserve">
    <value>Keine Ansicht erstellt.</value>
  </data>
  <data name="Info_NoXamlCopied" xml:space="preserve">
    <value>Keine XAML kopiert.</value>
  </data>
  <data name="Info_OverwritingFile" xml:space="preserve">
    <value>„{0}“ wird überschrieben.</value>
  </data>
  <data name="Info_PropertiesInSelectedAreaCount" xml:space="preserve">
    <value>{0} Eigenschaften im Auswahlbereich.</value>
  </data>
  <data name="Info_PropertyIsReadOnly" xml:space="preserve">
    <value>Die Eigenschaft ist schreibgeschützt, daher wird zuerst nach schreibgeschützten Zuordnungen gesucht.</value>
  </data>
  <data name="Info_PropertyTypeHasNoSubProperties" xml:space="preserve">
    <value>„{0}“ ist vom Typ „{1}“, der keine Untereigenschaften besitzt.</value>
  </data>
  <data name="Info_PropertyTypeNotRecognizedAsGeneric" xml:space="preserve">
    <value>„{0}“ wird nicht als generisch erkannt.</value>
  </data>
  <data name="Info_ProperyIsNotReadOnly" xml:space="preserve">
    <value>Die Eigenschaft ist nicht schreibgeschützt, daher werden schreibgeschützte Zuordnungen herausgefiltert.</value>
  </data>
  <data name="Info_ReplacingIncIntPlaceholder" xml:space="preserve">
    <value>Der Platzhalter für die ganzzahlige Erhöhung wird ersetzt...</value>
  </data>
  <data name="Info_ReplacingRepIntPlaceholder" xml:space="preserve">
    <value>Der Platzhalter für die wiederholte Ganzzahl wird ersetzt...</value>
  </data>
  <data name="Info_ReturningOutput" xml:space="preserve">
    <value>Rückgabe: {0}</value>
  </data>
  <data name="Info_SearchingForMappingWithGenericWildcard" xml:space="preserve">
    <value>Es wird nach einer Zuordnung für den generischen Typ (behandelt als „{0}“) gesucht...</value>
  </data>
  <data name="Info_SubpropertyCount" xml:space="preserve">
    <value>Die Eigenschaft „{0}“ besitzt {1} Untereigenschaften.</value>
  </data>
  <data name="Info_UnableToAccessTelemetry" xml:space="preserve">
    <value>Die Assembly „Microsoft.VisualStudio.Telemetry“ kann nicht geladen werden, daher wird Telemetrie nicht aktiviert.</value>
  </data>
  <data name="Info_UsingClassGrouping" xml:space="preserve">
    <value>Die Klassengruppierung „{0}“ wird verwendet.</value>
  </data>
  <data name="Prompt_ConfirmDeleteProfileMessage" xml:space="preserve">
    <value>Möchten Sie das Profil „{0}“ wirklich löschen?</value>
  </data>
  <data name="Prompt_ConfirmDeleteProfileTitle" xml:space="preserve">
    <value>Löschen bestätigen</value>
  </data>
  <data name="Prompt_ConfirmResetProfilesMessage" xml:space="preserve">
    <value>Beim Zurücksetzen der Profile gehen vorgenommene Änderungen verloren. Sind Sie sicher?</value>
  </data>
  <data name="Prompt_ConfirmResetProfilesTitle" xml:space="preserve">
    <value>Zurücksetzen bestätigen</value>
  </data>
  <data name="Prompt_FileExistsTitle" xml:space="preserve">
    <value>Die Datei ist bereits vorhanden.</value>
  </data>
  <data name="Propt_FileExistsMessage" xml:space="preserve">
    <value>Möchten Sie die vorhandene Datei überschreiben?</value>
  </data>
  <data name="UI_NoPropertiesXaml" xml:space="preserve">
    <value>&lt;!-- Beim Kopieren als XAML stehen keine zugänglichen Eigenschaften zur Verfügung. --&gt;</value>
  </data>
  <data name="UI_ProfileFilterDescription" xml:space="preserve">
    <value>Profil für schnelle XAML-Entwicklung</value>
  </data>
  <data name="UI_SelectionMoreThanThreeNames" xml:space="preserve">
    <value>{0}, {1} und {2} weitere Eigenschaften</value>
  </data>
  <data name="UI_SelectionThreeNames" xml:space="preserve">
    <value>{0}, {1} und 1 weitere Eigenschaft</value>
  </data>
  <data name="UI_SelectionTwoNames" xml:space="preserve">
    <value>{0} und {1}</value>
  </data>
  <data name="Package__106" xml:space="preserve">
    <value>Toolkit für schnelle XAML-Entwicklung</value>
    <comment>Options group header</comment>
  </data>
  <data name="Package__107" xml:space="preserve">
    <value>Profile</value>
    <comment>Options section header</comment>
  </data>
  <data name="Package__110" xml:space="preserve">
    <value>Toolkit für schnelle XAML-Entwicklung</value>
    <comment>Title for Help/About</comment>
  </data>
  <data name="Package__112" xml:space="preserve">
    <value>Tools zum Beschleunigen der XAML-App-Entwicklung</value>
    <comment>Detailed description for Help/About</comment>
  </data>
  <data name="Prompt_ImportFailedMessage" xml:space="preserve">
    <value>Das Profil konnte aufgrund der folgenden Probleme nicht importiert werden:\r\n\r\n- {0}</value>
  </data>
  <data name="Prompt_ImportFailedTitle" xml:space="preserve">
    <value>Importieren des Profils nicht möglich</value>
  </data>
  <data name="UI_AccessingOutputPaneFailed" xml:space="preserve">
    <value>Fehler beim Abrufen des Ausgabefensterbereichs.</value>
  </data>
  <data name="UI_ActiveProfileName" xml:space="preserve">
    <value>{0}    [*AKTIV*]</value>
  </data>
  <data name="UI_CopiedProfileName" xml:space="preserve">
    <value>{0} (kopieren)</value>
  </data>
  <data name="UI_CreatingOutputPaneFailed" xml:space="preserve">
    <value>Fehler beim Erstellen des Ausgabefensterbereichs.</value>
  </data>
  <data name="UI_NewProfileDefaultName" xml:space="preserve">
    <value>Neu</value>
  </data>
  <data name="UI_NoXamlCopiedNoProfilesConfigured" xml:space="preserve">
    <value>Keine XAML kopiert. Keine Profile konfiguriert.</value>
  </data>
  <data name="UI_RxtOutputPaneTitle" xml:space="preserve">
    <value>Toolkit für schnelle XAML-Entwicklung</value>
  </data>
  <data name="UI_ToolboxGroupHeader" xml:space="preserve">
    <value>Schnelle XAML-Entwicklung</value>
  </data>
  <data name="VSCT__ContextMenu" xml:space="preserve">
    <value>Schnelle XAML-Entwicklung</value>
    <comment>VS Context menu text</comment>
  </data>
  <data name="VSCT__CopyToClipboardCommandId" xml:space="preserve">
    <value>In die Zwischenablage kopieren</value>
    <comment>Command button text for when copying to the clipboard as XAML</comment>
  </data>
  <data name="VSCT__CreateViewCommandId" xml:space="preserve">
    <value>Ansicht erstellen</value>
    <comment>Command button text for when creating a view from the SolutionExplorer</comment>
  </data>
  <data name="VSCT__OpenOptionsCommandId" xml:space="preserve">
    <value>Legen Sie zuerst ein aktives Profil fest.</value>
    <comment>Command button text when there is no active profile set</comment>
  </data>
  <data name="VSCT__SendToToolboxCommandId" xml:space="preserve">
    <value>An Toolbox senden</value>
    <comment>Command button text for when sending to the clipboard as XAML</comment>
  </data>
  <data name="VSCT__SetDatacontextCommandId" xml:space="preserve">
    <value>Datenkontext festlegen</value>
    <comment>Command button text for setting the datacontext of a page</comment>
  </data>
  <data name="VSIX__LocalizedDescription" xml:space="preserve">
    <value>Tools zum Beschleunigen der XAML-App-Entwicklung</value>
    <comment>Description used in vsixlangpack</comment>
  </data>
  <data name="VSIX__LocalizedName" xml:space="preserve">
    <value>Toolkit für schnelle XAML-Entwicklung</value>
    <comment>Name used in vsixlangpack</comment>
  </data>
</root>